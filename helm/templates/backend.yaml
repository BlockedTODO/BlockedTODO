{{$label := .Values.backend.label}}
{{$secrets := .Values.backend.secrets}}
{{$database_secrets := .Values.database.secrets}}

apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{$label}}-deployment
    labels:
        app: {{$label}}
    namespace: {{.Values.namespace}}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: {{$label}}
    template:
        metadata:
            labels:
                app: {{$label}}
        spec:
            containers:
              - name: backend
                image: {{.Values.backend.image}}
                imagePullPolicy: IfNotPresent
                ports:
                  - containerPort: 3000
                env:
                  - name: NODE_ENV
                    value: {{.Values.environment}}
                  - name: TOKEN_SECRET
                    value: {{$secrets.token_secret}}
                  - name: GITHUB_WEBHOOKS_SECRET
                    value: {{$secrets.github_webhooks_secret | squote}}
                  - name: GITHUB_APP_ID
                    value: {{$secrets.github_app_id | squote}}
                  - name: GITHUB_APP_PRIVATE_KEY
                    value: {{$secrets.github_app_private_key | squote}}
                  - name: DATABASE_NAME
                    value: {{$database_secrets.database_name}}
                  - name: DATABASE_USER
                    value: {{$database_secrets.database_user}}
                  - name: DATABASE_PASSWORD
                    value: {{$database_secrets.database_password}}
                  - name: DATABASE_HOST
                    value: {{.Values.database.label}}-service
                  - name: DATABASE_PORT
                    value: {{$database_secrets.database_port | squote}}

---

apiVersion: v1
kind: Service
metadata:
    name: {{$label}}-service
    namespace: {{.Values.namespace}}
spec:
    type: NodePort
    selector:
        app: {{$label}}
    ports:
      - port: {{.Values.backend.port}}
        targetPort: 3000

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
    name: database-backup-cronjob
    namespace: {{.Values.namespace}}
spec:
    schedule: "0 3 * * *"
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 2
    jobTemplate:
        spec:
            template:
                spec:
                    restartPolicy: OnFailure
                    containers:
                      - name: database-backup-job
                        image: {{.Values.backend.image}}
                        imagePullPolicy: IfNotPresent
                        env:
                          - name: NODE_ENV
                            value: {{.Values.environment}}
                          - name: BACKUPS_BUCKET_NAME
                            value: {{.Values.backups_bucket_name}}
                          - name: DATABASE_NAME
                            value: {{$database_secrets.database_name}}
                          - name: DATABASE_USER
                            value: {{$database_secrets.database_user}}
                          - name: DATABASE_PASSWORD
                            value: {{$database_secrets.database_password}}
                          - name: DATABASE_HOST
                            value: {{.Values.database.label}}-service
                          - name: DATABASE_PORT
                            value: {{$database_secrets.database_port | squote}}
